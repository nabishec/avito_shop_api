basePath: /
definitions:
  model.AuthRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  model.AuthResponse:
    properties:
      token:
        type: string
    type: object
  model.CoinHistory:
    properties:
      received:
        items:
          $ref: '#/definitions/model.Received'
        type: array
      sent:
        items:
          $ref: '#/definitions/model.Sent'
        type: array
    type: object
  model.ErrorResponse:
    properties:
      errors:
        type: string
    type: object
  model.InfoResponse:
    properties:
      coinHistory:
        $ref: '#/definitions/model.CoinHistory'
      coins:
        type: integer
      inventory:
        items:
          $ref: '#/definitions/model.Item'
        type: array
    type: object
  model.Item:
    properties:
      quantity:
        type: integer
      type:
        type: string
    type: object
  model.Received:
    properties:
      amount:
        type: integer
      fromUser:
        type: string
    type: object
  model.SendCoinRequest:
    properties:
      amount:
        type: integer
      toUser:
        type: string
    required:
    - amount
    - toUser
    type: object
  model.Sent:
    properties:
      amount:
        type: integer
      toUser:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  title: API Avito shop
  version: 1.0.0
paths:
  /api/auth:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для аутентификации
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешная аутентификация.
          schema:
            $ref: '#/definitions/model.AuthResponse'
        "400":
          description: Неверный запрос.
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Неавторизован.
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера.
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Аутентификация и получение JWT-токена.
  /api/buy/{item}:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ.
        "400":
          description: Неверный запрос.
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Неавторизован.
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера.
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Купить предмет за монеты.
  /api/info:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ.
          schema:
            $ref: '#/definitions/model.InfoResponse'
        "400":
          description: Неверный запрос.
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Неавторизован.
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера.
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получить информацию о монетах, инвентаре и истории транзакций.
  /api/sendCoin:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для отправки монет
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.SendCoinRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ.
        "400":
          description: Неверный запрос.
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Неавторизован.
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера.
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Отправить монеты другому пользователю.
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
